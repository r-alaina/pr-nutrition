/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
    customers: CustomerAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    customers: Customer;
    'menu-items': MenuItem;
    tiers: Tier;
    'dietary-restrictions': DietaryRestriction;
    'weekly-menus': WeeklyMenu;
    orders: Order;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    customers: CustomersSelect<false> | CustomersSelect<true>;
    'menu-items': MenuItemsSelect<false> | MenuItemsSelect<true>;
    tiers: TiersSelect<false> | TiersSelect<true>;
    'dietary-restrictions': DietaryRestrictionsSelect<false> | DietaryRestrictionsSelect<true>;
    'weekly-menus': WeeklyMenusSelect<false> | WeeklyMenusSelect<true>;
    orders: OrdersSelect<false> | OrdersSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user:
    | (User & {
        collection: 'users';
      })
    | (Customer & {
        collection: 'customers';
      });
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
export interface CustomerAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  avatar?: (number | null) | Media;
  roles?: ('admin' | 'editor' | 'user')[] | null;
  active?: boolean | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customers".
 */
export interface Customer {
  id: number;
  name: string;
  /**
   * Customer pricing tier
   */
  tier?: (number | null) | Tier;
  /**
   * Current credit balance
   */
  credit_balance?: number | null;
  /**
   * Credit balance expiration date
   */
  credit_bal_exp?: string | null;
  /**
   * Customer dietary restrictions
   */
  dietary_restrictions?: (number | DietaryRestriction)[] | null;
  active?: boolean | null;
  /**
   * Whether the customer has completed their preference setup
   */
  preferences_set?: boolean | null;
  /**
   * Weekly or monthly subscription
   */
  subscription_frequency?: string | null;
  /**
   * Number of meals per week
   */
  meals_per_week?: number | null;
  /**
   * Include breakfast in subscription
   */
  include_breakfast?: boolean | null;
  /**
   * Include snacks in subscription
   */
  include_snacks?: boolean | null;
  /**
   * Customer allergies
   */
  allergies?: string[] | null;
  /**
   * Preferred pickup time
   */
  preferred_pickup_time?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tiers".
 */
export interface Tier {
  id: number;
  tier_name: string;
  description?: string | null;
  monthly_price: number;
  weekly_price: number;
  single_price: number;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "dietary-restrictions".
 */
export interface DietaryRestriction {
  id: number;
  restriction_name: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "menu-items".
 */
export interface MenuItem {
  id: number;
  name: string;
  description: string;
  /**
   * Base price for this item
   */
  price: number;
  category: 'lunch' | 'dinner' | 'premium' | 'breakfast-small' | 'breakfast-large' | 'dessert' | 'salad' | 'snack';
  image?: (number | null) | Media;
  active?: boolean | null;
  allergens?:
    | {
        allergen?: string | null;
        id?: string | null;
      }[]
    | null;
  nutritionInfo?: {
    calories?: number | null;
    protein?: number | null;
    carbs?: number | null;
    fat?: number | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "weekly-menus".
 */
export interface WeeklyMenu {
  id: number;
  weekLabel: string;
  startDate: string;
  endDate: string;
  active?: boolean | null;
  firstHalfItems?:
    | {
        menuItem: number | MenuItem;
        available?: boolean | null;
        id?: string | null;
      }[]
    | null;
  secondHalfItems?:
    | {
        menuItem: number | MenuItem;
        available?: boolean | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: number;
  orderNumber: string;
  customer: number | Customer;
  status: 'pending' | 'confirmed' | 'preparing' | 'ready' | 'completed' | 'cancelled';
  orderItems?:
    | {
        menuItem: number | MenuItem;
        quantity: number;
        /**
         * Individual meal price (0 for tier-based subscriptions)
         */
        unitPrice?: number | null;
        /**
         * Total price for this item (0 for tier-based subscriptions)
         */
        totalPrice?: number | null;
        id?: string | null;
      }[]
    | null;
  subtotal: number;
  taxAmount: number;
  totalAmount: number;
  /**
   * Customer tier at time of order
   */
  tier?: (number | null) | Tier;
  subscriptionFrequency?: ('weekly' | 'monthly' | 'a_la_carte') | null;
  /**
   * Number of meals per week for this order
   */
  mealsPerWeek?: number | null;
  /**
   * Additional notes for this order
   */
  notes?: string | null;
  allergenCharges?:
    | {
        mealId: string;
        mealName: string;
        quantity: number;
        matchingAllergens?:
          | {
              allergen: string;
              /**
               * Charge per allergen per meal ($5.00)
               */
              charge: number;
              id?: string | null;
            }[]
          | null;
        /**
         * Total allergen charge for this meal
         */
        totalAllergenCharge: number;
        id?: string | null;
      }[]
    | null;
  /**
   * Total allergen charges for entire order
   */
  totalAllergenCharges: number;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'customers';
        value: number | Customer;
      } | null)
    | ({
        relationTo: 'menu-items';
        value: number | MenuItem;
      } | null)
    | ({
        relationTo: 'tiers';
        value: number | Tier;
      } | null)
    | ({
        relationTo: 'dietary-restrictions';
        value: number | DietaryRestriction;
      } | null)
    | ({
        relationTo: 'weekly-menus';
        value: number | WeeklyMenu;
      } | null)
    | ({
        relationTo: 'orders';
        value: number | Order;
      } | null);
  globalSlug?: string | null;
  user:
    | {
        relationTo: 'users';
        value: number | User;
      }
    | {
        relationTo: 'customers';
        value: number | Customer;
      };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user:
    | {
        relationTo: 'users';
        value: number | User;
      }
    | {
        relationTo: 'customers';
        value: number | Customer;
      };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  avatar?: T;
  roles?: T;
  active?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customers_select".
 */
export interface CustomersSelect<T extends boolean = true> {
  name?: T;
  tier?: T;
  credit_balance?: T;
  credit_bal_exp?: T;
  dietary_restrictions?: T;
  active?: T;
  preferences_set?: T;
  subscription_frequency?: T;
  meals_per_week?: T;
  include_breakfast?: T;
  include_snacks?: T;
  allergies?: T;
  preferred_pickup_time?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "menu-items_select".
 */
export interface MenuItemsSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  price?: T;
  category?: T;
  image?: T;
  active?: T;
  allergens?:
    | T
    | {
        allergen?: T;
        id?: T;
      };
  nutritionInfo?:
    | T
    | {
        calories?: T;
        protein?: T;
        carbs?: T;
        fat?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tiers_select".
 */
export interface TiersSelect<T extends boolean = true> {
  tier_name?: T;
  description?: T;
  monthly_price?: T;
  weekly_price?: T;
  single_price?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "dietary-restrictions_select".
 */
export interface DietaryRestrictionsSelect<T extends boolean = true> {
  restriction_name?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "weekly-menus_select".
 */
export interface WeeklyMenusSelect<T extends boolean = true> {
  weekLabel?: T;
  startDate?: T;
  endDate?: T;
  active?: T;
  firstHalfItems?:
    | T
    | {
        menuItem?: T;
        available?: T;
        id?: T;
      };
  secondHalfItems?:
    | T
    | {
        menuItem?: T;
        available?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders_select".
 */
export interface OrdersSelect<T extends boolean = true> {
  orderNumber?: T;
  customer?: T;
  status?: T;
  orderItems?:
    | T
    | {
        menuItem?: T;
        quantity?: T;
        unitPrice?: T;
        totalPrice?: T;
        id?: T;
      };
  subtotal?: T;
  taxAmount?: T;
  totalAmount?: T;
  tier?: T;
  subscriptionFrequency?: T;
  mealsPerWeek?: T;
  notes?: T;
  allergenCharges?:
    | T
    | {
        mealId?: T;
        mealName?: T;
        quantity?: T;
        matchingAllergens?:
          | T
          | {
              allergen?: T;
              charge?: T;
              id?: T;
            };
        totalAllergenCharge?: T;
        id?: T;
      };
  totalAllergenCharges?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}